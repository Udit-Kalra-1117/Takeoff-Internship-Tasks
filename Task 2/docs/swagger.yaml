basePath: /api/v1
definitions:
  main.Employee:
    properties:
      date_of_birth:
        type: string
      department:
        type: string
      email:
        type: string
      id:
        type: integer
      is_admin:
        type: boolean
      name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      role:
        type: string
    type: object
  main.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  main.SuccessResponse:
    properties:
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: kalra.udit15@gmail.com
    name: Udit Kalra
    url: https://github.com/Udit-Kalra-1117
  description: This is the implementation and documentation of the Employee Management
    System API in Go using Swagger
  title: Implementing and Documenting Employee Management System API in Go using Swagger
  version: "1"
paths:
  /employees:
    get:
      description: Retrieves a list of all employees
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Employee'
            type: array
      summary: Get all employees
      tags:
      - Employees
    post:
      consumes:
      - application/json
      description: Creates a new employee record
      parameters:
      - description: Employee object
        in: body
        name: employee
        required: true
        schema:
          $ref: '#/definitions/main.Employee'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.Employee'
      summary: Create an employee
      tags:
      - Employees
  /employees/{id}:
    delete:
      description: Deletes a specific employee by ID
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/main.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Delete an employee by ID
      tags:
      - Employees
    get:
      description: Retrieves a specific employee by ID
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Employee'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Get an employee by ID
      tags:
      - Employees
    put:
      consumes:
      - application/json
      description: Updates a specific employee by ID
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      - description: Employee object
        in: body
        name: employee
        required: true
        schema:
          $ref: '#/definitions/main.Employee'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Employee'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Update an employee by ID
      tags:
      - Employees
securityDefinitions:
  bearerToken:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
